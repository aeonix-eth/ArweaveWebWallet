{"version":3,"file":"Explore-2eb8f832.js","sources":["../../src/components/composed/GlobalSearch.vue","../../src/components/composed/BlockCard.vue","../../src/components/composed/BlockCarousel.vue","../../src/views/Explore.vue"],"sourcesContent":["<template>\n\t<div class=\"global-search\">\n\t\t<div class=\"input-container\">\n\t\t\t<Input v-model=\"search\" :actions=\"[searchAction]\" placeholder=\"Search - address, transaction id, username, app name\" style=\"flex:1 1 0;\" />\n\t\t</div>\n\t\t<TransitionsManager>\n\t\t\t<div v-if=\"search.length\" class=\"results input-box\">\n\t\t\t\t<div class=\"query-list input-box flex-column\">\n\t\t\t\t\t<div v-if=\"wallet\" class=\"flex-column\">\n\t\t\t\t\t\t<div class=\"secondary-text\">User</div>\n\t\t\t\t\t\t<ProfileCard :wallet=\"wallet\" compact=\"true\" />\n\t\t\t\t\t\t<div />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"secondary-text\">Transactions</div>\n\t\t\t\t\t<List :query=\"topQuery\" :component=\"TxCard\" :component-props=\"{ options: { currentAddress: wallet?.key } }\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</TransitionsManager>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Input from '@/components/form/Input.vue'\nimport List from '@/components/layout/List.vue'\nimport IconSearch from '@/assets/icons/search.svg?component'\nimport { computed } from 'vue'\nimport { arweaveQuery, queryAggregator } from '@/store/ArweaveStore'\nimport TxCard from '@/components/composed/TxCard.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport ProfileCard from '@/components/composed/ProfileCard.vue'\nimport { ArweaveAccount } from '@/providers/Arweave'\nimport { getAccountByAddress } from '@/functions/Wallets'\nimport { useDebouncedRef } from '@/functions/UtilsVue'\n\nconst search = useDebouncedRef('', 1000)\nconst isId = computed(() => ArweaveAccount.metadata.isAddress(search.value))\nconst searchAction = { run: () => {}, icon: IconSearch }\n\nconst wallet = computed(() => isId.value && userTxQuery?.state?.value?.length && getAccountByAddress(search.value))\n\nconst userTxQuery = queryAggregator([\n\tarweaveQuery(computed(() => isId.value ? { owners: [search.value] } : undefined), 'global search user'),\n\tarweaveQuery(computed(() => isId.value ? { recipients: [search.value] } : undefined), 'global search user'),\n])\n\nconst nameQuery = queryAggregator([\n\tarweaveQuery(computed(() => !isId.value ? { tags: [{ name: 'App-Name', values: ['arweave-id'] }, { name: 'Name', values: [search.value] }] } : undefined)),\n\tarweaveQuery(computed(() => !isId.value ? { tags: [{ name: 'App-Name', values: [search.value] }] } : undefined)),\n\tarweaveQuery(computed(() => !isId.value && search.value.toLowerCase() !== search.value ? { tags: [{ name: 'App-Name', values: [search.value.toLowerCase()] }] } : undefined)),\n])\n\nconst topQuery = queryAggregator([\n\tarweaveQuery(computed(() => isId.value ? { ids: [search.value] } : undefined)),\n\tuserTxQuery,\n\tnameQuery,\n])\n</script>\n\n\n\n<style scoped>\n.global-search {\n\tposition: relative;\n}\n\n.input-container {\n\tbackground: var(--background2);\n\tborder-radius: var(--border-radius);\n\tposition: relative;\n\tz-index: 2;\n}\n\n.results {\n\ttop: calc(100% - var(--border-radius));\n\tbackground: var(--background2);\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n\tposition: absolute;\n\twidth: 100%;\n\tmax-height: calc(var(--current-vh) * 0.8);\n\toverflow: hidden;\n\tz-index: 1;\n}\n\n.query-list {\n\tborder: 0;\n\tborder-radius: 0;\n\tpadding: var(--spacing);\n\tmax-height: calc(var(--current-vh) * 0.8);\n\toverflow: auto;\n}\n\n.result {\n}\n</style>","<template>\n\t<ListContainer class=\"block-card\">\n\t\t<template #header>\n\t\t\t<Observer @intersection=\"visible = true\" :threshold=\"0.5\">\n\t\t\t\t<div class=\"flex-row\" style=\"align-items: center; justify-content: space-between; flex-wrap: wrap;\">\n\t\t\t\t\t<h2 class=\"flex-row\" style=\"align-items: center;\">\n\t\t\t\t\t\t<Icon :icon=\"IconCube\" style=\"font-size: 1.5em; color: var(--orange);\" />\n\t\t\t\t\t\t<span>Block {{ block.node.height }}</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<TransitionsManager>\n\t\t\t\t\t\t<div v-if=\"blockData\" style=\"text-align: end; flex: 1 1 auto;\">\n\t\t\t\t\t\t\t<div>{{ blockData.txs?.length }} Transactions | {{ humanFileSize(blockData.block_size) }}</div>\n\t\t\t\t\t\t\t<div><Date :timestamp=\"blockData.timestamp * 1000\" /></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TransitionsManager>\n\t\t\t\t</div>\n\t\t\t</Observer>\n\t\t</template>\n\t\t<template #default>\n\t\t\t<div v-if=\"visible\" class=\"container-scroll\">\n\t\t\t\t<List :query=\"txsQuery\" :component=\"TxCard\" :componentProps=\"{ options: { space: true } }\" />\n\t\t\t</div>\n\t\t</template>\n\t</ListContainer>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport ListContainer from '@/components/layout/ListContainer.vue'\nimport Date from '@/components/atomic/Date.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport TxCard from '@/components/composed/TxCard.vue'\nimport List from '@/components/layout/List.vue'\nimport Observer from '@/components/function/Observer.vue'\nimport IconCube from '@/assets/icons/cube.svg?component'\nimport { ref } from 'vue'\nimport { arweave, arweaveQuery } from '@/store/ArweaveStore'\nimport { humanFileSize } from '@/functions/Utils'\nimport { getAsyncData } from '@/functions/AsyncData'\n\nconst props = defineProps<{ block: any }>()\n\nconst visible = ref(false)\nconst txsQuery = arweaveQuery({ block: { min: props.block.node.height, max: props.block.node.height } })\nconst blockData = getAsyncData({\n\tname: 'single block header',\n\tawaitEffect: () => visible.value,\n\tquery: async () => arweave.blocks.get(props.block.node.id),\n\tseconds: 10,\n\tcompleted: state => state\n}).state\n</script>\n\n\n\n<style scoped>\n.container-scroll {\n\theight: 100%;\n\toverflow: hidden auto;\n}\n\n.list {\n\tpadding: var(--spacing);\n}\n</style>","<template>\n\t<div class=\"block-carousel\">\n\t\t<Carousel :index=\"index\" :options=\"{ align: 'center', overscroll: true, immediate: true }\" @start=\"start\" @end=\"end\" class=\"block-carousel\">\n\t\t\t<div v-for=\"block in state\" :key=\"block.node.id\" class=\"block fade-list-item\">\n\t\t\t\t<BlockCard :block=\"block\" class=\"box\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"canMine && state.length\" class=\"block fade-list-item box flex-column\" style=\"align-items: center; justify-content: center\">\n\t\t\t\t<Icon :icon=\"IconCube\" style=\"font-size: 4em; opacity: 0.8;\" />\n\t\t\t\t<Button @click=\"mine\">Mine new block</Button>\n\t\t\t</div>\n\t\t</Carousel>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Carousel from '@/components/layout/Carousel.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport IconCube from '@/assets/icons/cube.svg?component'\nimport { ref, computed, watch } from 'vue'\nimport ArweaveStore, { arweaveQueryBlocks, networkInfo } from '@/store/ArweaveStore'\nimport BlockCard from '@/components/composed/BlockCard.vue'\nimport Button from '@/components/atomic/Button.vue'\n\n\nconst index = ref(undefined as undefined | number)\nconst query = arweaveQueryBlocks({})\nconst state = computed(() => query.state.value && [...query.state.value].reverse())\nwatch(state, (state, oldState) => !oldState?.length && state?.length && (index.value = state.length - 1))\n\nconst canMine = computed(() => networkInfo.value?.network?.includes('arlocal'))\nconst mine = async () => {\n\tawait fetch(ArweaveStore.gatewayURL + 'mine')\n\tawait query.updateQuery.getState(true)\n\tsetTimeout(() => index.value = state.value!.length - 1, 500)\n}\n\nconst start = (val: IntersectionObserverEntry) => val.isIntersecting && query?.fetchQuery.query()\nconst end = (val: IntersectionObserverEntry) => val.isIntersecting\n</script>\n\n\n\n<style>\n.block-carousel {\n\tdisplay: flex;\n\tjustify-content: stretch;\n\tflex-direction: column;\n\tmin-height: 500px;\n\twidth: 100%;\n}\n\n.carousel {\n\theight: 100%;\n\tflex: 1 1 0;\n}\n\n.block {\n\tpadding-top: var(--spacing);\n\theight: 100%;\n\twidth: var(--current-vw);\n\tmax-width: var(--column-width-small);\n\t/*padding: 0;*/\n\tdisplay: inline-flex;\n\tflex-direction: column;\n}\n\n.box {\n\tflex: 1 1 0;\n}\n</style>","<template>\n\t<div class=\"settings\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"column\">\n\t\t\t\t<GlobalSearch />\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<h2><span style=\"text-transform: capitalize;\">{{ gatewayHostname }}</span> Gateway State</h2>\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<div>Peers: {{ networkInfo?.peers ?? '...' }}</div>\n\t\t\t\t\t\t<div>Queue: {{ networkInfo?.queue_length ?? '...' }}</div>\n\t\t\t\t\t\t<div>State Latency: {{ networkInfo?.node_state_latency ?? '...' }}</div>\n\t\t\t\t\t\t<div>Pending Transactions: {{ pendingList?.length ?? '...' }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<h2>Weave State</h2>\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<div>Network Height: {{ networkInfo?.height ?? '...' }}</div>\n\t\t\t\t\t\t<div>Weave Size: {{ currentBlock?.weave_size && humanFileSize(currentBlock?.weave_size) || '...' }}</div>\n\t\t\t\t\t\t<div>Endowment Pool: <Amount :winston=\"currentBlock?.reward_pool\" /></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<BlockCarousel />\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport ArweaveStore, { currentBlock, networkInfo } from '@/store/ArweaveStore'\nimport { humanFileSize } from '@/functions/Utils'\nimport Amount from '@/components/composed/Amount.vue'\nimport { pendingList } from '@/store/BlockStore'\nimport GlobalSearch from '@/components/composed/GlobalSearch.vue'\nimport BlockCarousel from '@/components/composed/BlockCarousel.vue'\nimport { computed } from 'vue'\n\nconst gatewayHostname = computed(() => ArweaveStore.gatewayURL && new URL(ArweaveStore.gatewayURL).hostname)\n</script>\n\n\n\n<style scoped>\n.settings {\n\tmin-height: var(--current-vh);\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n.container {\n\tbackground: var(--background2);\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\toutline: 0.5px solid var(--border);\n}\n\n.column {\n\tpadding: var(--spacing);\n\twidth: 100%;\n\tmax-width: var(--column-width);\n}\n\n.group {\n\tmargin-top: 3em;\n}\n\n.wallet-options {\n\tborder-radius: var(--border-radius);\n}\n\n.block-carousel {\n\tflex: 1 0 auto;\n}\n</style>"],"names":["search","useDebouncedRef","isId","computed","ArweaveAccount","searchAction","IconSearch","wallet","userTxQuery","getAccountByAddress","queryAggregator","arweaveQuery","nameQuery","topQuery","visible","ref","txsQuery","props","blockData","getAsyncData","arweave","state","index","query","arweaveQueryBlocks","watch","oldState","canMine","networkInfo","mine","ArweaveStore","start","val","end","gatewayHostname"],"mappings":"gnCAoCM,MAAAA,EAASC,EAAgB,GAAI,GAAI,EACjCC,EAAOC,EAAS,IAAMC,EAAe,SAAS,UAAUJ,EAAO,KAAK,CAAC,EACrEK,EAAe,CAAE,IAAK,IAAM,CAAA,EAAI,KAAMC,GAEtCC,EAASJ,EAAS,IAAMD,EAAK,OAASM,GAAa,OAAO,OAAO,QAAUC,EAAoBT,EAAO,KAAK,CAAC,EAE5GQ,EAAcE,EAAgB,CACnCC,EAAaR,EAAS,IAAMD,EAAK,MAAQ,CAAE,OAAQ,CAACF,EAAO,KAAK,CAAM,EAAA,MAAS,EAAG,oBAAoB,EACtGW,EAAaR,EAAS,IAAMD,EAAK,MAAQ,CAAE,WAAY,CAACF,EAAO,KAAK,CAAM,EAAA,MAAS,EAAG,oBAAoB,CAAA,CAC1G,EAEKY,EAAYF,EAAgB,CACjCC,EAAaR,EAAS,IAAOD,EAAK,MAA6G,OAArG,CAAE,KAAM,CAAC,CAAE,KAAM,WAAY,OAAQ,CAAC,YAAY,CAAA,EAAK,CAAE,KAAM,OAAQ,OAAQ,CAACF,EAAO,KAAK,CAAG,CAAA,EAAe,CAAC,EACzJW,EAAaR,EAAS,IAAOD,EAAK,MAAmE,OAA3D,CAAE,KAAM,CAAC,CAAE,KAAM,WAAY,OAAQ,CAACF,EAAO,KAAK,EAAG,CAAM,CAAS,CAAC,EAC/GW,EAAaR,EAAS,IAAM,CAACD,EAAK,OAASF,EAAO,MAAM,YAAY,IAAMA,EAAO,MAAQ,CAAE,KAAM,CAAC,CAAE,KAAM,WAAY,OAAQ,CAACA,EAAO,MAAM,YAAY,CAAC,CAAG,CAAA,GAAM,MAAS,CAAC,CAAA,CAC5K,EAEKa,EAAWH,EAAgB,CAChCC,EAAaR,EAAS,IAAMD,EAAK,MAAQ,CAAE,IAAK,CAACF,EAAO,KAAK,GAAM,MAAS,CAAC,EAC7EQ,EACAI,CAAA,CACA,k6BCbKE,EAAUC,EAAI,EAAK,EACnBC,EAAWL,EAAa,CAAE,MAAO,CAAE,IAAKM,EAAM,MAAM,KAAK,OAAQ,IAAKA,EAAM,MAAM,KAAK,QAAU,EACjGC,EAAYC,EAAa,CAC9B,KAAM,sBACN,YAAa,IAAML,EAAQ,MAC3B,MAAO,SAAYM,EAAQ,OAAO,IAAIH,EAAM,MAAM,KAAK,EAAE,EACzD,QAAS,GACT,UAAoBI,GAAAA,CACpB,CAAA,EAAE,05BC1BG,MAAAC,EAAQP,EAAI,MAA+B,EAC3CQ,EAAQC,EAAmB,CAAA,CAAE,EAC7BH,EAAQlB,EAAS,IAAMoB,EAAM,MAAM,OAAS,CAAC,GAAGA,EAAM,MAAM,KAAK,EAAE,QAAS,CAAA,EAClFE,EAAMJ,EAAO,CAACA,EAAOK,IAAa,CAACA,GAAU,QAAUL,GAAO,SAAWC,EAAM,MAAQD,EAAM,OAAS,EAAE,EAElG,MAAAM,EAAUxB,EAAS,IAAMyB,EAAY,OAAO,SAAS,SAAS,SAAS,CAAC,EACxEC,EAAO,SAAY,CAClB,MAAA,MAAMC,EAAa,WAAa,MAAM,EACtC,MAAAP,EAAM,YAAY,SAAS,EAAI,EACrC,WAAW,IAAMD,EAAM,MAAQD,EAAM,MAAO,OAAS,EAAG,GAAG,CAAA,EAGtDU,EAASC,GAAmCA,EAAI,gBAAkBT,GAAO,WAAW,QACpFU,EAAOD,GAAmCA,EAAI,w0BCA9C,MAAAE,EAAkB/B,EAAS,IAAM2B,EAAa,YAAc,IAAI,IAAIA,EAAa,UAAU,EAAE,QAAQ"}