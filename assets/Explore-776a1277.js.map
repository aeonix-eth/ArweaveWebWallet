{"version":3,"file":"Explore-776a1277.js","sources":["../../src/components/composed/GlobalSearch.vue","../../src/components/composed/BlockCard.vue","../../src/components/composed/BlockCarousel.vue","../../src/views/Explore.vue"],"sourcesContent":["<template>\n\t<div class=\"global-search\">\n\t\t<div class=\"input-container flex-row\">\n\t\t\t<Input v-model=\"search\" :actions=\"[searchAction]\" placeholder=\"Search - address, transaction id, username, app, tag\" />\n\t\t\t<Input v-model=\"subSearch\" v-if=\"search && !isId\" :icon=\"ICON.label\" placeholder=\"Tag value\" />\n\t\t</div>\n\t\t<TransitionsManager axis=\"y\" :vector=\"vector\">\n\t\t\t<div v-if=\"search.length\" class=\"results input-box\">\n\t\t\t\t<div class=\"query-list input-box flex-column\">\n\t\t\t\t\t<div v-if=\"wallet\" class=\"flex-column\">\n\t\t\t\t\t\t<div class=\"secondary-text\">User</div>\n\t\t\t\t\t\t<ProfileCard :wallet=\"wallet\" compact=\"true\" />\n\t\t\t\t\t\t<div />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"secondary-text\">Transactions</div>\n\t\t\t\t\t<List :query=\"topQuery\" :component=\"TxCard\" :component-props=\"{ options: { currentAddress: wallet?.key } }\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</TransitionsManager>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Input from '@/components/form/Input.vue'\nimport List from '@/components/layout/List.vue'\nimport { ICON } from '@/store/Theme'\nimport { computed, ref, watch } from 'vue'\nimport { arweaveQuery, queryAggregator } from '@/store/ArweaveStore'\nimport TxCard from '@/components/composed/TxCard.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport ProfileCard from '@/components/composed/ProfileCard.vue'\nimport { ArweaveAccount } from '@/providers/Arweave'\nimport { getAccountByAddress } from '@/functions/Wallets'\nimport { useDebouncedRef } from '@/functions/UtilsVue'\n\nconst search = useDebouncedRef('', 1000)\nconst subSearch = useDebouncedRef('', 1000)\nconst isId = computed(() => ArweaveAccount.metadata.isAddress(search.value))\nconst searchAction = computed(() => ({ run: () => {}, icon: !subSearch.value.length && ICON.search, disabled: true }) as Action)\n\nconst wallet = computed(() => isId.value && userTxQuery?.state?.value?.length && getAccountByAddress(search.value))\nconst getUserTxQuery = () => [\n\tarweaveQuery(computed(() => ({ owners: [search.value] })), 'global search user'),\n\tarweaveQuery(computed(() => ({ recipients: [search.value] })), 'global search user'),\n]\nconst getIdTxQuery = () => [\n\tarweaveQuery(computed(() => ({ ids: [search.value] })), 'global search id'),\n]\nconst getNameTxQuery = () => subSearch.value ? [\n\tarweaveQuery(computed(() => ({ tags: [{ name: search.value, values: [subSearch.value] }] }))),\n] : [\n\t// todo arweaveQuery(computed(() => search.value.split('/').length === 2 ? { tags: [{ name: 'Content-Type', values: [search.value.toLowerCase()] }] } : undefined)),\n\tarweaveQuery(computed(() => ({ tags: [{ name: 'App-Name', values: ['arweave-id'] }, { name: 'Name', values: [search.value] }] }))),\n\t// todo other profile providers\n\tarweaveQuery(computed(() => ({ tags: [{ name: 'App-Name', values: [search.value] }] }))),\n\tarweaveQuery(computed(() => search.value.toLowerCase() !== search.value ? { tags: [{ name: 'App-Name', values: [search.value.toLowerCase()] }] } : undefined)),\n\tarweaveQuery(computed(() => ({ tags: [{ name: 'app', values: [search.value] }] }))),\n\tarweaveQuery(computed(() => search.value.toLowerCase() !== search.value ? { tags: [{ name: 'app', values: [search.value.toLowerCase()] }] } : undefined)),\n]\nconst userTxRef = ref([] as ReturnType<typeof getUserTxQuery>)\nconst userTxQuery = queryAggregator(userTxRef)\nconst idTxRef = ref([] as ReturnType<typeof getIdTxQuery>)\nconst idTxQuery = queryAggregator(idTxRef)\nconst nameRef = ref([] as ReturnType<typeof getNameTxQuery>)\nconst nameQuery = queryAggregator(nameRef)\nwatch(() => [search.value, subSearch.value] as const, (val, old) => {\n\tif (!val[0] && old?.[0]) { subSearch.value = '' }\n\tif (isId.value) {\n\t\tif (userTxRef.value.length === 0) { userTxRef.value = getUserTxQuery() }\n\t\tif (idTxRef.value.length === 0) { idTxRef.value = getIdTxQuery() }\n\t\tnameRef.value = []\n\t} else {\n\t\tuserTxRef.value = []\n\t\tidTxRef.value = []\n\t\tif (nameRef.value.length === 0 || !!val[1] !== !!old?.[1]) { nameRef.value = getNameTxQuery() }\n\t}\n}, { immediate: true })\nconst topQuery = queryAggregator([idTxQuery, userTxQuery, nameQuery])\nconst vector = ref(0)\nwatch(search, val => vector.value = val.length > 0 ? 1 : -1, { immediate: true, flush: 'post' })\n</script>\n\n\n\n<style scoped>\n.global-search {\n\tposition: relative;\n}\n\n.input-container {\n\tbackground: var(--background2);\n\tborder-radius: var(--border-radius);\n\tposition: relative;\n\tz-index: 2;\n\tgap: 0;\n}\n\n.results {\n\ttop: calc(100% - var(--border-radius));\n\tbackground: var(--background2);\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n\tposition: absolute;\n\twidth: 100%;\n\tmax-height: calc(var(--current-vh) * 0.8);\n\toverflow: hidden;\n\tz-index: 1;\n}\n\n.query-list {\n\tborder: 0;\n\tborder-radius: 0;\n\tpadding: var(--spacing);\n\tmax-height: calc(var(--current-vh) * 0.8);\n\toverflow: auto;\n}\n\n.input:first-child {\n\tflex: 2 1 100px;\n}\n\n.input:first-child:not(:only-child) {\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n}\n\n.input:not(:first-child) {\n\tflex: 1 1 100px;\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n</style>","<template>\n\t<ListContainer class=\"block-card\">\n\t\t<template #header>\n\t\t\t<Observer @intersecting=\"visible = true\" :threshold=\"0.5\">\n\t\t\t\t<div class=\"flex-row\" style=\"align-items: center; justify-content: space-between; flex-wrap: wrap;\">\n\t\t\t\t\t<h2 class=\"flex-row\" style=\"align-items: center;\">\n\t\t\t\t\t\t<Icon :icon=\"ICON.cube\" style=\"font-size: 1.5em; color: var(--orange);\" />\n\t\t\t\t\t\t<span>Block {{ block.node.height }}</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<TransitionsManager>\n\t\t\t\t\t\t<div v-if=\"blockData\" style=\"text-align: end; flex: 1 1 auto;\">\n\t\t\t\t\t\t\t<div>{{ blockData.txs?.length }} Transactions | {{ humanFileSize(blockData.block_size) }}</div>\n\t\t\t\t\t\t\t<div><Date :timestamp=\"blockData.timestamp * 1000\" /></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TransitionsManager>\n\t\t\t\t</div>\n\t\t\t</Observer>\n\t\t</template>\n\t\t<template #default>\n\t\t\t<div v-if=\"visible\" class=\"container-scroll\">\n\t\t\t\t<List :query=\"txsQuery\" :component=\"TxCard\" :componentProps=\"{ options: { space: true } }\" />\n\t\t\t</div>\n\t\t</template>\n\t</ListContainer>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport ListContainer from '@/components/layout/ListContainer.vue'\nimport Date from '@/components/atomic/Date.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport TxCard from '@/components/composed/TxCard.vue'\nimport List from '@/components/layout/List.vue'\nimport Observer from '@/components/function/Observer.vue'\nimport { ICON } from '@/store/Theme'\nimport { ref } from 'vue'\nimport { arweave, arweaveQuery } from '@/store/ArweaveStore'\nimport { humanFileSize } from '@/functions/Utils'\nimport { getAsyncData } from '@/functions/AsyncData'\n\nconst props = defineProps<{ block: any }>()\n\nconst visible = ref(false)\nconst txsQuery = arweaveQuery({ block: { min: props.block.node.height, max: props.block.node.height } })\nconst blockData = getAsyncData({\n\tname: 'single block header',\n\tawaitEffect: () => visible.value,\n\tquery: async () => arweave.blocks.get(props.block.node.id),\n\tprocessResult: r => typeof r === 'string' ? JSON.parse(r) : r,\n\tseconds: 10,\n\tcompleted: state => state\n}).state\n</script>\n\n\n\n<style scoped>\n.container-scroll {\n\theight: 100%;\n\toverflow: hidden auto;\n}\n\n.list {\n\tpadding: var(--spacing);\n}\n</style>","<template>\n\t<div class=\"block-carousel\">\n\t\t<Carousel :index=\"index\" @index=\"onIndex = $event\" :options=\"{ align: 'center', overscroll: true, immediate: true }\" @start=\"start\" @end=\"end\" class=\"block-carousel\">\n\t\t\t<div v-for=\"block in state\" :key=\"block.node.id\" class=\"block fade-list-item\" :class=\"{ active: height && height == block.node.height }\">\n\t\t\t\t<BlockCard :block=\"block\" class=\"box\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"canMine && state?.length\" class=\"block fade-list-item box flex-column\" style=\"align-items: center; justify-content: center\">\n\t\t\t\t<Icon :icon=\"ICON.cube\" style=\"font-size: 4em; opacity: 0.8;\" />\n\t\t\t\t<Button @click=\"mine\">Mine new block</Button>\n\t\t\t</div>\n\t\t</Carousel>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Carousel from '@/components/layout/Carousel.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport { ICON } from '@/store/Theme'\nimport { ref, computed, watch } from 'vue'\nimport ArweaveStore, { arweaveQueryBlocks, networkInfo } from '@/store/ArweaveStore'\nimport BlockCard from '@/components/composed/BlockCard.vue'\nimport Button from '@/components/atomic/Button.vue'\n\nconst props = defineProps<{\n\theight?: number | string\n\tonHeight?: number | string\n}>()\nconst emit = defineEmits<{\n\t(e: 'height', val: number | string): void\n}>()\n\nconst index = ref(undefined as undefined | number)\nconst onIndex = ref(undefined as undefined | number)\nconst query = arweaveQueryBlocks({})\nconst state = computed(() => query.state.value && [...query.state.value].reverse())\nwatch(onIndex, i => i != null && state.value?.[i] && emit('height', state.value?.[i].node.height))\nwatch(state, (state, oldState) => {\n\tif (!state) { return }\n\tif (!oldState?.length && state.length) { index.value = state.length - 1 }\n\tif (oldState && oldState.length !== state.length && onIndex.value === oldState.length - 1) { setTimeout(() => index.value = state.length - 1, 1000) }\n})\n\nconst canMine = computed(() => networkInfo.value?.network?.includes('arlocal'))\nconst mine = async () => {\n\tawait fetch(ArweaveStore.gatewayURL + 'mine')\n\tawait query.updateQuery.getState(true)\n\tsetTimeout(() => index.value = state.value!.length - 1, 1000)\n}\n\nconst start = (val: IntersectionObserverEntry) => val.isIntersecting && query?.fetchQuery.query()\nconst end = (val: IntersectionObserverEntry) => query.refreshSwitch.value = val.isIntersecting\n</script>\n\n\n\n<style>\n.block-carousel {\n\tdisplay: flex;\n\tjustify-content: stretch;\n\tflex-direction: column;\n\tmin-height: 500px;\n\twidth: 100%;\n}\n\n.carousel {\n\theight: 100%;\n\tflex: 1 1 0;\n}\n\n.block {\n\tpadding-top: var(--spacing);\n\theight: 100%;\n\twidth: var(--current-vw);\n\tmax-width: var(--column-width-small);\n\t/*padding: 0;*/\n\tdisplay: inline-flex;\n\tflex-direction: column;\n}\n\n.block > *::before {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 0;\n\theight: 2px;\n\tbackground: var(--orange);\n\tleft: 0;\n\tright: 0;\n\topacity: 0;\n\ttransition: 2s ease;\n    outline: 0.5px solid var(--border);\n\toverflow: visible;\n}\n\n.block.active > *::before {\n\topacity: 0.6;\n}\n\n.box {\n\tflex: 1 1 0;\n}\n</style>","<template>\n\t<div class=\"settings\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"column\">\n\t\t\t\t<GlobalSearch />\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<h2><span style=\"text-transform: capitalize;\">{{ gatewayHostname }}</span> Gateway State</h2>\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<div>Peers: {{ networkInfo?.peers ?? '...' }}</div>\n\t\t\t\t\t\t<div>Pending Transactions: {{ pendingList?.length ?? '...' }}</div>\n\t\t\t\t\t\t<div>Network Height: {{ networkInfo?.height ?? '...' }}{{ totalStored }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<h2>Weave State</h2>\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<div>Weave Size: {{ currentBlock?.weave_size && humanFileSize(currentBlock?.weave_size) || '...' }}</div>\n\t\t\t\t\t\t<div>Endowment Pool: <Amount :winston=\"currentBlock?.reward_pool\" /></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<BlockCarousel :height=\"networkInfo?.height\" />\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport ArweaveStore, { currentBlock, networkInfo } from '@/store/ArweaveStore'\nimport { humanFileSize, round } from '@/functions/Utils'\nimport Amount from '@/components/composed/Amount.vue'\nimport { pendingList } from '@/store/BlockStore'\nimport GlobalSearch from '@/components/composed/GlobalSearch.vue'\nimport BlockCarousel from '@/components/composed/BlockCarousel.vue'\nimport { computed } from 'vue'\n\nconst gatewayHostname = computed(() => ArweaveStore.gatewayURL && new URL(ArweaveStore.gatewayURL).hostname)\nconst totalStored = computed(() => {\n\tconst blocks = networkInfo.value?.blocks\n\tconst height = networkInfo.value?.height\n\tif (blocks == null || height == null) { return '' }\n\tconst percent = 100 * Math.min(blocks / Math.max(height - 1, 1), 1)\n\tif (percent === 100) { return '' }\n\treturn ` (${round(percent, 2)}% known)`\n})\n</script>\n\n\n\n<style scoped>\n.settings {\n\tmin-height: var(--current-vh);\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n.container {\n\tbackground: var(--background2);\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\toutline: 0.5px solid var(--border);\n}\n\n.column {\n\tpadding: var(--spacing);\n\twidth: 100%;\n\tmax-width: var(--column-width);\n}\n\n.group {\n\tmargin-top: 3em;\n}\n\n.wallet-options {\n\tborder-radius: var(--border-radius);\n}\n\n.block-carousel {\n\tflex: 1 0 auto;\n}\n</style>"],"names":["search","useDebouncedRef","subSearch","isId","computed","ArweaveAccount","searchAction","ICON","wallet","userTxQuery","getAccountByAddress","getUserTxQuery","arweaveQuery","getIdTxQuery","getNameTxQuery","userTxRef","ref","queryAggregator","idTxRef","idTxQuery","nameRef","nameQuery","watch","val","old","topQuery","vector","visible","txsQuery","props","blockData","getAsyncData","arweave","r","state","index","onIndex","query","arweaveQueryBlocks","i","emit","oldState","canMine","networkInfo","mine","ArweaveStore","start","end","gatewayHostname","totalStored","blocks","height","percent","round"],"mappings":"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"}