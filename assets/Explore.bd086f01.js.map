{"version":3,"file":"Explore.bd086f01.js","sources":["../../src/components/layout/List.vue","../../src/functions/UtilsVue.ts","../../src/components/composed/GlobalSearch.vue","../../src/components/composed/BlockCard.vue","../../src/components/composed/BlockCarousel.vue"],"sourcesContent":["<template>\n\t<div class=\"list flex-column\">\n\t\t<transition-group name=\"fade-list-rise\">\n\t\t\t<component v-for=\"tx in txs\" :tx=\"tx.node\" :key=\"tx.node.id\" :is=\"component\" v-bind=\"componentProps\" class=\"fade-list-item\" />\n\t\t</transition-group>\n\t\t<div v-if=\"!completedQuery\" class=\"loader-container\">\n\t\t\t<Icon icon=\"loader\" />\n\t\t</div>\n\t\t<Observer observe=\"intersection\" @intersection=\"val => val.isIntersecting && fetchQuery()\" class=\"bottom\" v-show=\"!fetchLoading && !completedQuery\" />\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Observer from '@/components/function/Observer.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport { computed } from 'vue'\n\nconst props = defineProps<{\n\tquery: any\n\tcomponent: any\n\tcomponentProps?: object\n\toptions?: {\n\t\tstyle?: 'card' | 'block'\n\t}\n}>()\n\nconst fetchLoading = computed(() => props.query.fetchQuery.queryStatus.running)\nconst txs = computed(() => props.query.updateQuery.state.value || [])\nconst completedQuery = computed(() => props.query.status?.completed)\nconst fetchQuery = () => props.query.fetchQuery.query()\n</script>\n\n\n\n<style scoped>\n.list {\n\t/*background: var(--background);*/\n\tposition: relative;\n}\n\n.bottom {\n\tposition: absolute;\n\tbottom: 0;\n\twidth: 100%;\n\theight: calc(200px + 40vh);\n}\n\n.loader-container {\n\tmin-height: 40vh;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 4em;\n\tcolor: #ffffff66;\n}\n</style>","import { customRef } from 'vue'\n\nexport function useDebouncedRef<T>(value: T, delay = 200) {\n\tlet timeout: any\n\treturn customRef((track, trigger) => {\n\t\treturn {\n\t\t\tget() {\n\t\t\t\ttrack()\n\t\t\t\treturn value\n\t\t\t},\n\t\t\tset(newValue: T) {\n\t\t\t\tclearTimeout(timeout)\n\t\t\t\ttimeout = setTimeout(() => {\n\t\t\t\t\tvalue = newValue\n\t\t\t\t\ttrigger()\n\t\t\t\t}, delay)\n\t\t\t}\n\t\t}\n\t})\n}","<template>\n\t<div class=\"global-search\">\n\t\t<div class=\"input-container\">\n\t\t\t<Input v-model=\"search\" :actions=\"[searchAction]\" placeholder=\"Search - username, address, transaction id\" style=\"flex:1 1 0;\" />\n\t\t</div>\n\t\t<TransitionsManager>\n\t\t\t<div v-if=\"data.query?.length\" class=\"results input-box\">\n\t\t\t\t<List class=\"query-list input-box\">\n\t\t\t\t\t<List v-if=\"wallet\" class=\"flex-column\">\n\t\t\t\t\t\t<div class=\"secondary-text\">User</div>\n\t\t\t\t\t\t<ProfileCard :wallet=\"wallet\" compact=\"true\" />\n\t\t\t\t\t\t<div />\n\t\t\t\t\t</List>\n\t\t\t\t\t<div class=\"secondary-text\">Transactions</div>\n\t\t\t\t\t<div v-for=\"item in data.query\" :key=\"item\" class=\"result\">\n\t\t\t\t\t\t<TxCard :tx=\"item.node\" :options=\"{ currentAddress: wallet?.key }\" />\n\t\t\t\t\t</div>\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t</TransitionsManager>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Input from '@/components/atomic/Input.vue'\nimport List from '@/components/layout/List.vue'\nimport IconSearch from '@/assets/icons/search.svg?component'\nimport { computed, reactive, ref, watch } from 'vue'\nimport { arweaveQuery, queryAggregator } from '@/store/ArweaveStore'\nimport TxCard from '@/components/composed/TxCard.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport ProfileCard from '@/components/composed/ProfileCard.vue'\nimport { getAccountByAddress } from '@/functions/Wallets'\nimport { useDebouncedRef } from '@/functions/UtilsVue'\n\n\nconst search = useDebouncedRef('')\nconst isId = computed(() => search.value.match(/^[a-z0-9_-]{43}$/i))\nconst searchAction = { run: () => {}, icon: IconSearch }\n\nlet query: any\nconst data = ref({} as any)\nconst wallet = computed(() => isId.value && !data.value.idQuery?.state?.length && getAccountByAddress(search.value))\n\nwatch(search, () => {\n\tquery = undefined\n\tdata.value = {}\n\tif (isId.value) {\n\t\tconst idQuery = arweaveQuery({ ids: [search.value] })\n\t\tdata.value.idQuery = idQuery\n\t\tquery = queryAggregator([\n\t\t\tidQuery,\n\t\t\tarweaveQuery({ owners: [search.value] }),\n\t\t\tarweaveQuery({ recipients: [search.value] }),\n\t\t])\n\t}\n\telse if (search.value.length) { query = queryAggregator([\n\t\tarweaveQuery({ tags: [{ name: 'App-Name', values: ['arweave-id'] }, { name: 'Name', values: [search.value] }] }),\n\t])}\n\tdata.value.query = query?.state\n\tquery?.fetchQuery.query()\n})\n</script>\n\n\n\n<style scoped>\n.global-search {\n\tposition: relative;\n}\n\n.input-container {\n\tbackground: var(--background2);\n\tborder-radius: var(--border-radius);\n\tposition: relative;\n\tz-index: 2;\n}\n\n.results {\n\ttop: calc(100% - var(--border-radius));\n\tbackground: var(--background2);\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n\tposition: absolute;\n\twidth: 100%;\n\toverflow: hidden;\n\tz-index: 1;\n}\n\n.query-list {\n\tborder: 0;\n\tborder-radius: 0;\n\tpadding: var(--spacing);\n\t/*padding-top: var(--border-radius);*/\n}\n\n.result {\n}\n</style>","<template>\n\t<ListContainer class=\"block-card\">\n\t\t<template #header>\n\t\t\t<Observer @intersection=\"visible = true\">\n\t\t\t\t<div class=\"flex-row\" style=\"align-items: center; justify-content: space-between; flex-wrap: wrap;\">\n\t\t\t\t\t<h2 class=\"flex-row\" style=\"align-items: center;\">\n\t\t\t\t\t\t<Icon :icon=\"IconCube\" style=\"font-size: 1.5em; color: var(--orange);\" />\n\t\t\t\t\t\t<span>Block {{ block.node.height }}</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<TransitionsManager>\n\t\t\t\t\t\t<div v-if=\"blockData\" style=\"text-align: end\">\n\t\t\t\t\t\t\t<div>{{ blockData.txs?.length }} Transactions | {{ humanFileSize(blockData.block_size) }}</div>\n\t\t\t\t\t\t\t<div><Date :timestamp=\"blockData.timestamp * 1000\" /></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TransitionsManager>\n\t\t\t\t</div>\n\t\t\t</Observer>\n\t\t</template>\n\t\t<template #default>\n\t\t\t<div v-if=\"visible\" class=\"container-scroll\">\n\t\t\t\t<List :query=\"txsQuery\" :component=\"TxCard\" :componentProps=\"{ options: { space: true } }\" />\n\t\t\t</div>\n\t\t</template>\n\t</ListContainer>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport ListContainer from '@/components/layout/ListContainer.vue'\nimport Date from '@/components/atomic/Date.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport IconCube from '@/assets/icons/cube.svg?component'\nimport TxCard from '@/components/composed/TxCard.vue'\nimport List from '@/components/layout/List.vue'\nimport Observer from '@/components/function/Observer.vue'\nimport { ref } from 'vue'\nimport { arweave, arweaveQuery } from '@/store/ArweaveStore'\nimport { humanFileSize } from '@/functions/Utils'\nimport { getAsyncData } from '@/functions/AsyncData'\n\nconst props = defineProps<{ block: any }>()\n\nconst visible = ref(false)\nconst txsQuery = arweaveQuery({ block: { min: props.block.node.height, max: props.block.node.height } })\nconst blockData = getAsyncData({\n\tawaitEffect: () => visible.value,\n\tquery: async () => arweave.blocks.get(props.block.node.id),\n\tseconds: 10,\n\tcompleted: state => state\n}).state\n</script>\n\n\n\n<style scoped>\n.container-scroll {\n\theight: 100%;\n\toverflow: hidden auto;\n}\n\n.list {\n\tpadding: var(--spacing);\n}\n</style>","<template>\n\t<div class=\"block-carousel\">\n\t\t<Carousel v-model=\"index\" :options=\"{ align: 'center', overscroll: true }\" @start=\"start\" @end=\"end\" class=\"block-carousel\">\n\t\t\t<div v-for=\"block in state\" :key=\"block.node.id\" class=\"block fade-list-item\">\n\t\t\t\t<BlockCard :block=\"block\" class=\"box\" />\n\t\t\t</div>\n\t\t</Carousel>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Carousel from '@/components/layout/Carousel.vue'\nimport { ref, computed, watch } from 'vue'\nimport { getAccountByAddress } from '@/functions/Wallets'\nimport { arweaveQuery, arweaveQueryBlocks, queryAggregator } from '@/store/ArweaveStore'\nimport BlockCard from '@/components/composed/BlockCard.vue'\n\nconst index = ref(undefined as undefined | number)\n\nconst query = arweaveQueryBlocks({})\nconst state = computed(() => query.state.value && [...query.state.value].reverse())\nwatch(state, (state, oldState) => !oldState?.length && state?.length && (index.value = state.length - 1))\nquery?.fetchQuery.query()\n\nconst start = (val: IntersectionObserverEntry) => val.isIntersecting && query?.fetchQuery.query()\nconst end = (val: IntersectionObserverEntry) => val.isIntersecting\n</script>\n\n\n\n<style>\n.block-carousel {\n\tdisplay: flex;\n\tjustify-content: stretch;\n\tflex-direction: column;\n\tmin-height: 500px;\n}\n\n.carousel {\n\theight: 100%;\n\tflex: 1 1 0;\n}\n\n.block {\n\tpadding-top: var(--spacing);\n\theight: 100%;\n\twidth: var(--current-vw);\n\tmax-width: var(--column-width-small);\n\t/*padding: 0;*/\n\tdisplay: inline-flex;\n\tflex-direction: column;\n}\n\n.box {\n\tflex: 1 1 0;\n}\n</style>"],"names":[],"mappings":"6nBA4BM,EAAe,EAAS,IAAM,EAAM,MAAM,WAAW,YAAY,SACjE,EAAM,EAAS,IAAM,EAAM,MAAM,YAAY,MAAM,OAAS,IAC5D,EAAiB,EAAS,IAAM,EAAM,MAAM,QAAQ,WACpD,EAAa,IAAM,EAAM,MAAM,WAAW,8yBC7Bb,EAAU,EAAQ,IAAK,IACrD,SACG,IAAU,CAAC,EAAO,IACjB,EACN,KAAM,YAEE,GAER,IAAI,EAAa,cACH,KACH,WAAW,IAAM,GAClB,OAEN,0TCuBD,GAAS,GAAgB,IACzB,EAAO,EAAS,IAAM,EAAO,MAAM,MAAM,sBACzC,EAAe,CAAE,IAAK,IAAM,GAAI,KAAM,MAExC,QACE,GAAO,EAAI,IACX,EAAS,EAAS,IAAM,EAAK,OAAS,CAAC,EAAK,MAAM,SAAS,OAAO,QAAU,EAAoB,EAAO,iBAEvG,EAAQ,IAAM,MACX,SACH,MAAQ,GACT,EAAK,MAAO,MACT,GAAU,EAAa,CAAE,IAAK,CAAC,EAAO,WACvC,MAAM,QAAU,IACb,EAAgB,CACvB,EACA,EAAa,CAAE,OAAQ,CAAC,EAAO,SAC/B,EAAa,CAAE,WAAY,CAAC,EAAO,eAG5B,GAAO,MAAM,WAAkB,EAAgB,CACvD,EAAa,CAAE,KAAM,CAAC,CAAE,KAAM,WAAY,OAAQ,CAAC,eAAiB,CAAE,KAAM,OAAQ,OAAQ,CAAC,EAAO,gBAEhG,MAAM,MAAQ,GAAO,SACnB,WAAW,mgCClBb,EAAU,EAAI,IACd,EAAW,EAAa,CAAE,MAAO,CAAE,IAAK,EAAM,MAAM,KAAK,OAAQ,IAAK,EAAM,MAAM,KAAK,UACvF,EAAY,EAAa,CAC9B,YAAa,IAAM,EAAQ,MAC3B,MAAO,SAAY,EAAQ,OAAO,IAAI,EAAM,MAAM,KAAK,IACvD,QAAS,GACT,UAAW,GAAS,IAClB,8vBChCG,GAAQ,EAAI,QAEZ,EAAQ,EAAmB,IAC3B,EAAQ,EAAS,IAAM,EAAM,MAAM,OAAS,CAAC,GAAG,EAAM,MAAM,OAAO,aACnE,EAAO,CAAC,EAAO,IAAa,CAAC,GAAU,QAAU,GAAO,WAAiB,MAAQ,EAAM,OAAS,OAC/F,WAAW,aAEZ,GAAQ,AAAC,GAAmC,EAAI,gBAAkB,GAAO,WAAW,QACpF,EAAM,AAAC,GAAmC,EAAI"}