{"version":3,"file":"Connect.0b0b89d6.js","sources":["../../src/components/layout/Carousel.vue","../../src/components/composed/WalletSelector.vue","../../src/components/composed/WalletTabs.vue","../../src/components/atomic/Expand.vue","../../src/assets/icons/notification.svg?component","../../src/components/composed/TxCardExtension.vue","../../src/assets/icons/y.svg?component","../../src/components/composed/PermissionCard.vue","../../src/assets/icons/launch.svg?component","../../src/components/composed/ConnectionCard.vue","../../src/views/Connect.vue"],"sourcesContent":["<template>\n\t<div ref=\"root\" class=\"carousel flex-row no-scrollbar\" :style=\"style\">\n\t\t<transition-group name=\"fade-list\">\n\t\t\t<div v-if=\"options?.overscroll\" class=\"margin fade-list-item\" key=\"margin1\" />\n\t\t\t<slot />\n\t\t\t<div v-if=\"options?.overscroll\" class=\"margin fade-list-item\" key=\"margin2\" />\n\t\t</transition-group>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport { awaitEffect } from '@/functions/AsyncData'\nimport { onMounted, ref, computed, watch, nextTick } from 'vue'\n\nconst props = defineProps<{\n\tmodelValue?: number\n\toptions: {\n\t\tposition: ScrollLogicalPosition\n\t\toverscroll: boolean\n\t\timmediate?: boolean\n\t}\n}>()\nconst emit = defineEmits(['update:modelValue'])\n\nconst model = computed<number | undefined>({\n\tget () { return props.modelValue },\n\tset (value) { emit('update:modelValue', value) }\n})\nconst root = ref(null as null | HTMLElement)\nconst elements = computed(() => {\n\tif (!root.value?.children) { return [] }\n\treturn Array(...root.value.children).filter(e => !e.classList.contains('margin'))\n})\nconst style = computed(() => ({\n\t'--position': props.options?.position || 'start',\n}))\nconst effect = (instant?: boolean) => {\n\tif (model.value == null) { return }\n\tconst index = Math.max(model.value || 0, 0)\n\telements.value[index]?.scrollIntoView({\n\t\tbehavior: instant ? 'instant' as any : 'smooth',\n\t\tblock: 'start',\n\t\tinline: props.options?.position || 'start',\n\t})\n}\nonMounted(async () => {\n\tawait nextTick()\n\tawait awaitEffect(() => elements.value.length)\n\tsetTimeout(() => effect(props.options.immediate))\n\twatch(model, () => effect())\n})\n</script>\n\n\n\n<style scoped>\n.carousel {\n\t--position: start;\n\tscroll-snap-type: x mandatory;\n\toverflow: auto;\n\twhite-space: nowrap;\n\tdisplay: block; /* for transitions */\n\tline-height: 0;\n\toverscroll-behavior-x: contain;\n\tposition: relative;\n}\n\n.carousel > :deep(*) {\n\tline-height: var(--line-height);\n}\n\n.carousel > :deep(*:not(.margin)) {\n\tscroll-snap-align: var(--position);\n}\n\n.margin {\n\twidth: calc(var(--current-vw) * 1);\n\tdisplay: inline-block;\n}\n</style>","<template>\n\t<div class=\"wallet-selector\">\n\t\t<button v-if=\"model\" type=\"button\" @click=\"$emit('selectWallet')\" class=\"tab\" :class=\"{ active }\">\n\t\t\t<AddressIcon :address=\"address\" />\n\t\t</button>\n\t\t<button v-if=\"exit\" class=\"exit\" type=\"button\" @click=\"$emit('exit')\">\n\t\t\t<div class=\"exit-background\" />\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t<path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n\t\t\t\t<path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\n\t\t\t</svg>\n\t\t</button>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport AddressIcon from '@/components/atomic/AddressIcon.vue'\nimport { computed } from 'vue'\nimport { getWalletById } from '@/functions/Wallets'\n\nconst props = defineProps({ modelValue: String, default: String, exit: Boolean, active: Boolean })\nconst emit = defineEmits(['update:modelValue', 'selectWallet', 'exit'])\n\nconst model = computed<string | undefined>({\n\tget () { return props.modelValue || props.default },\n\tset (value) { emit('update:modelValue', value) }\n})\n\nconst address = computed(() => getWalletById(model.value)?.key)\n</script>\n\n\n\n<style scoped>\n.wallet-selector {\n\t--spacing: var(--toolbar-spacing);\n\tdisplay: flex;\n}\n\n.wallet-selector > * + * {\n\tmargin-inline-start: var(--spacing);\n}\n\n.tab {\n\topacity: 0.5;\n\ttransition: 0.2s ease;\n}\n\n.tab.active {\n\topacity: 1;\n}\n\n.address-icon {\n\twidth: 40px;\n\theight: 40px;\n\tpadding: 8px;\n\tbackground: var(--background);\n\tborder-radius: var(--border-radius);\n}\n\n.exit {\n\twidth: 40px;\n\theight: 40px;\n\tcolor: var(--red);\n\tposition: relative;\n\tflex: 0 0 auto;\n}\n\n.exit-background {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tborder-radius: var(--border-radius);\n\tbackground: var(--red);\n\topacity: 0.1;\n}\n\n.exit svg {\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 20%;\n}\n</style>","<template>\n\t<div class=\"wallet-tabs\">\n\t\t<Carousel v-model=\"undefined\" :options=\"{ position: 'start', overscroll: false }\">\n\t\t\t<button v-for=\"Wallet in Wallets\" :key=\"Wallet.id\" type=\"button\" @click=\"model = Wallet.id\" class=\"tab\" :class=\"{ active: Wallet.id == model }\">\n\t\t\t\t<AddressIcon :address=\"Wallet.key\" />\n\t\t\t</button>\n\t\t</Carousel>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Carousel from '@/components/layout/Carousel.vue'\nimport AddressIcon from '@/components/atomic/AddressIcon.vue'\nimport { computed } from 'vue'\nimport { Wallets } from '@/functions/Wallets'\n\nconst props = defineProps(['modelValue'])\nconst emit = defineEmits(['update:modelValue'])\n\nconst model = computed({\n\tget () { return props.modelValue },\n\tset (value) { emit('update:modelValue', value) }\n})\n</script>\n\n\n\n<style scoped>\n.wallet-tabs {\n\tdisplay: flex;\n}\n.tab {\n\topacity: 0.5;\n\ttransition: 0.2s ease;\n}\n.tab.active,\n.tab:hover {\n\topacity: 1;\n}\n.address-icon {\n\twidth: 40px;\n\theight: 40px;\n\tpadding: 8px;\n\tbackground: var(--background);\n\tborder-radius: var(--border-radius);\n}\n</style>","<template>\n\t<button type=\"button\" class=\"expand\" @click=\"expanded = !expanded\">\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" :class=\"{ expanded }\">\n\t\t\t<path d=\"M24 24H0V0h24v24z\" fill=\"none\" opacity=\".87\" />\n\t\t\t<path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z\" />\n\t\t</svg>\n\t</button>\n</template>\n\n\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps(['modelValue'])\nconst emit = defineEmits(['update:modelValue'])\n\nconst expanded = computed({\n\tget () { return props.modelValue },\n\tset (value) { emit('update:modelValue', value) }\n})\n</script>\n\n\n\n<style scoped>\n.expand {\n\tcursor: pointer;\n\twidth: 1.5em;\n\theight: 1.5em;\n\tdisplay: flex;\n}\n\nsvg {\n\twidth: 100%;\n\theight: 100%;\n\ttransition: 0.2s ease;\n}\n\nsvg.expanded {\n\ttransform: rotate(180deg);\n}\n</style>","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  fill: \"#FFF\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n}, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\" }, null, -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\n\nexport function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, _hoisted_4))\n}\nexport default { render: render }","<template>\n\t<div class=\"tx-card-extension\">\n\t\t<div v-if=\"tx.tags.length || tx.data_size\" class=\"flex-row\" style=\"justify-content:space-between;\">\n\t\t\t<div v-if=\"tx.tags.length\">Tags:</div>\n\t\t\t<div v-if=\"tx.data_size\">Data: {{ humanFileSize(tx.data_size) }}</div>\n\t\t</div>\n\t\t<ul v-if=\"tx.tags.length\" class=\"tags secondary-text\">\n\t\t\t<li v-for=\"tag in tx.tags\">\n\t\t\t\t{{ tag.name + ' | ' + tag.value }}\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</template>\n\n\n\n<script setup>\nimport Address from '@/components/atomic/Address.vue'\nimport ArweaveStore, { arweave } from '@/store/ArweaveStore'\nimport InterfaceStore from '@/store/InterfaceStore'\nimport { unpackTags } from '@/functions/Transactions'\nimport { humanFileSize } from '@/functions/Utils'\nimport { computed } from 'vue'\n\nconst props = defineProps(['tx'])\n\n// owner - verify\n// tags\n// data_size\n// data\n// reward\n\nconst verticalElement = computed(() => InterfaceStore.breakpoints.verticalLayout)\n</script>\n\n\n\n<style scoped>\n.tags {\n\twhite-space: normal;\n}\n\nul {\n\tpadding-inline-start: 1em;\n\tmargin-block-start: 0;\n}\n</style>","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  fill: \"#fff\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n}, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" }, null, -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\n\nexport function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, _hoisted_4))\n}\nexport default { render: render }","<template>\n\t<div v-show=\"message\" class=\"permission-card\">\n\t\t<template v-if=\"message?.method === 'signTransaction'\">\n\t\t\t<TxCard :tx=\"tx\" />\n\t\t\t<TxCardExtension :tx=\"tx\" />\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'getPublicKey'\" class=\"permission-card\">\n\t\t\tShare the public key\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'getArweaveConfig'\" class=\"permission-card\">\n\t\t\tShare the arweave config\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'sign'\" class=\"permission-card\">\n\t\t\tSign data\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'decrypt'\" class=\"permission-card\">\n\t\t\tDecrypt data\n\t\t</template>\n\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t<ActionList v-if=\"!messageEntry.status\" :actions=\"actions\" />\n\t\t\t<ActionList v-else :actions=\"actionsPending\" />\n\t\t</transition>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport TxCard from '@/components/composed/TxCard.vue'\nimport TxCardExtension from '@/components/composed/TxCardExtension.vue'\nimport ActionList from '@/components/composed/ActionsList.vue'\nimport { getMessage } from '@/functions/JsonRpc'\nimport { ArweaveVerifier } from 'arweave-wallet-connector/lib/ArweaveWebWallet'\nimport { computed, ref, watch } from 'vue'\n\nimport IconY from '@/assets/icons/y.svg?component'\nimport IconX from '@/assets/icons/x.svg?component'\nimport IconConnection from '@/assets/icons/connection.svg?component'\n\nconst props = defineProps<{ messageEntry: MessageEntry }>()\n\nconst message = ref(null as null | StoredMessage)\n\nconst tx = computed(() => {\n\tif (message.value?.method !== 'signTransaction') { return }\n\tconst receivedTx = message.value?.params?.[0] as Parameters<ArweaveVerifier['signTransaction']>[0]\n\tconst tags = receivedTx.tags?.map(({name, value}) => ({ name: window.atob(name), value: window.atob(value) }))\n\treturn { ...receivedTx, tags }\n})\n\nwatch(() => props.messageEntry, async () => {\n\tmessage.value = await getMessage(props.messageEntry)\n}, { immediate: true })\n\nconst actions = [\n\t{ name: 'Accept', icon: IconY, run: () => props.messageEntry.status = 'accepted' },\n\t{ name: 'Reject', icon: IconX, run: () => props.messageEntry.status = 'rejected' },\n]\nconst actionsPending = [{ name: 'Pending', icon: IconConnection, run: () => {} }]\n</script>\n\n\n\n<style scoped>\n.actions-list {\n\tjustify-content: space-around;\n}\n</style>","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  fill: \"#fff\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n}, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"M19 19H5V5h7V3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" }, null, -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\n\nexport function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, _hoisted_4))\n}\nexport default { render: render }","<template>\n\t<div class=\"connection-card flex-column no-scrollbar\">\n\t\t<div class=\"flex-row\">\n\t\t\t<button type=\"button\" class=\"info flex-row\" @click=\"navigateBack\" :disabled=\"!navigateBackAvailable(state.origin, state.session)\">\n\t\t\t\t<IconBackground :img=\"state.appInfo?.logo\" :icon=\"IconConnection\" />\n\t\t\t\t<div style=\"min-width: 0;\">\n\t\t\t\t\t<div class=\"ellipsis\">{{ state.appInfo?.name || 'Connector' }}</div>\n\t\t\t\t\t<div class=\"secondary-text ellipsis\">{{ state.origin }}</div>\n\t\t\t\t</div>\n\t\t\t\t<Icon v-if=\"navigateBackAvailable(state.origin, state.session)\" :icon=\"IconLaunch\" />\n\t\t\t</button>\n\t\t\t<WalletSelector v-model=\"state.walletId\" :default=\"defaultId\" :exit=\"true\" :active=\"!isSelectingWallet\" @selectWallet=\"selectWallet\" @exit=\"disconnect\" />\n\t\t</div>\n\t\t<div class=\"flex-column\" style=\"flex: 1 1 0;\">\n\t\t\t<Tabs :tabs=\"tabs\" v-model=\"currentTab\" :disabled=\"!currentId\" />\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"container-scroll\">\n\t\t\t\t\t<transition :name=\"transitionName\" mode=\"out-in\">\n\t\t\t\t\t\t<div :key=\"(currentId || '') + currentTab\" class=\"content\">\n\t\t\t\t\t\t\t<div v-if=\"currentTab === 'Requests'\">\n\t\t\t\t\t\t\t\t<transition-group name=\"fade-list\">\n\t\t\t\t\t\t\t\t\t<WalletTabs v-if=\"isSelectingWallet\" v-model=\"currentId\" class=\"box fade-list-item\" key=\"0\" />\n\t\t\t\t\t\t\t\t\t<div v-if=\"connectionFeed?.length === 0 && state.walletId && state.walletId === currentId\" class=\"box status fade-list-item\" key=\"0\">Connected</div>\n\t\t\t\t\t\t\t\t\t<Notification v-if=\"currentId !== state.walletId\" :data=\"connectData\" class=\"box fade-list-item\" key=\"1\">{{ connectData.content }}</Notification>\n\t\t\t\t\t\t\t\t\t<PermissionCard v-for=\"messageEntry in connectionFeed\" :key=\"messageEntry.uuid\" :messageEntry=\"messageEntry\" style=\"padding: var(--spacing);\" class=\"box flex-column fade-list-item\" />\n\t\t\t\t\t\t\t\t</transition-group>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div v-else-if=\"currentTab === 'Permissions'\">\n\t\t\t\t\t\t\t\t<transition-group name=\"fade-list\">\n\t\t\t\t\t\t\t\t\t<WalletTabs v-if=\"isSelectingWallet\" v-model=\"currentId\" class=\"box fade-list-item\" key=\"0\" />\n\t\t\t\t\t\t\t\t\t<div class=\"box status fade-list-item\" key=\"0\">WIP</div>\n\t\t\t\t\t\t\t\t</transition-group>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport WalletSelector from '@/components/composed/WalletSelector.vue'\nimport WalletTabs from '@/components/composed/WalletTabs.vue'\nimport Tabs from '@/components/atomic/Tabs.vue'\nimport IconBackground from '@/components/atomic/IconBackground.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport Notification from '@/components/composed/Notification.vue'\nimport PermissionCard from '@/components/composed/PermissionCard.vue'\nimport { getWalletById, Wallets } from '@/functions/Wallets'\nimport InterfaceStore from '@/store/InterfaceStore'\nimport { navigateBack, navigateBackAvailable } from '@/functions/Connect'\nimport { computed, ref, toRef, watch } from 'vue'\n\nimport IconConnection from '@/assets/icons/connection.svg?component'\nimport IconY from '@/assets/icons/y.svg?component'\nimport IconX from '@/assets/icons/x.svg?component'\nimport IconLaunch from '@/assets/icons/launch.svg?component'\n\nconst props = defineProps<{ state: ConnectorState }>()\n\nconst defaultId = Wallets.value[0]?.id\nconst addresses = computed(() => Wallets.value.map(wallet => wallet.key))\nconst currentId = ref(props.state.walletId || defaultId)\nconst defaultWallet = computed(() => getWalletById(defaultId))\nconst tabs = [\n\t{ name: 'Requests', color: 'var(--orange)' },\n\t{ name: 'Permissions', color: 'var(--green)' },\n]\nconst currentTab = ref(currentId.value ? tabs[0].name : null)\nwatch(() => props.state.walletId, (walletId) => {\n\tif (!walletId) { return }\n\tisSelectingWallet.value = false\n\tcurrentId.value = walletId\n\tcurrentTab.value = tabs[0].name\n})\n\nconst disconnect = () => props.state.walletId = false\nconst connect = () => {\n\tisSelectingWallet.value = false\n\tprops.state.walletId = currentId.value + ''\n}\nconst goBack = () => {\n\tif (!props.state.walletId) { return }\n\tisSelectingWallet.value = false\n\tcurrentId.value = props.state.walletId\n}\n\nconst isSelectingWallet = ref(!props.state.walletId)\nconst selectWallet = () => {\n\tif (!isSelectingWallet.value) { isSelectingWallet.value = true; return }\n\tcurrentId.value = props.state.walletId || Wallets.value[0]?.id\n\tisSelectingWallet.value = false\n}\n\nconst connectData = computed(() => {\n\tconst content = !props.state.walletId ?\n\t\t`Connect to ${props.state.appInfo?.name || props.state.origin} from the account ${currentId.value}`\n\t\t: `Switch to ${currentId.value}`\n\treturn {\n\t\ttitle: props.state.walletId ? 'Switch' : 'Connect',\n\t\ttimestamp: Date.now(), // todo\n\t\tactions: [\n\t\t\t{ name: 'Connect', icon: IconY, run: connect },\n\t\t\t{ name: !props.state.walletId ? 'Switch' : 'Cancel', icon: IconX, run: !props.state.walletId ? selectWallet : goBack },\n\t\t],\n\t\texpanded: true,\n\t\tcontent,\n\t}\n})\n\n\n\nconst connectionFeed = computed(() => {\n\tif (currentId.value !== props.state.walletId) { return [] }\n\treturn props.state.messageQueue?.filter((m) => !m.fulfilled)\n})\n\n\n\nconst verticalLayout = toRef(InterfaceStore.breakpoints, 'verticalLayout')\nconst transitionName = ref(null as null | string)\nconst selectTransitionName = (val: number, oldVal: number) => val > oldVal ? transitionName.value = 'slide-left' : transitionName.value = 'slide-right'\nwatch(() => tabs.findIndex(tab => tab.name === currentTab.value), selectTransitionName)\nwatch(() => Wallets.value.findIndex(wallet => wallet.id === currentId.value), selectTransitionName)\n</script>\n\n\n\n<style scoped>\n.connection-card {\n\toverflow-y: auto;\n}\n\n.flex-row {\n\talign-items: center;\n}\n\n.info {\n\tflex: 1 1 0;\n\tmin-width: 0;\n\toverflow: hidden;\n}\n\n.wallet-selector {\n\tflex: 0 0 auto;\n\tjustify-content: flex-end;\n}\n\n.wallet-tabs {\n\tpadding: var(--spacing) 0;\n\tjustify-content: center;\n\twidth: 100%;\n}\n\n.container {\n\tflex: 1 1 0;\n\t/* max-height: 60vh; */\n\tbackground: var(--background);\n\tborder-radius: var(--border-radius) var(--border-radius) 0 0;\n\talign-items: center;\n\tjustify-content: flex-start;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-height: min(300px, calc(var(--current-vh) - calc(var(--spacing) + 5px)));\n}\n\n.container-scroll {\n\toverflow: hidden auto;\n\theight: 100%;\n}\n\n.content {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\t/* padding: var(--spacing);\n\tborder-bottom: 0.5px solid #ffffff20; */\n}\n\n.status {\n\theight: 8em;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: #444;\n}\n\n.content > * > * {\n\tbackground: var(--background);\n\twidth: 100%;\n}\n\n.notification {\n\twidth: 100%;\n\tpadding: var(--spacing);\n\tborder-bottom: 0.5px solid var(--border);\n}\n\n.icon-background {\n\tflex: 0 0 auto;\n}\n\n.icon {\n\topacity: var(--element-secondary-opacity);\n}\n</style>","<template>\n\t<div class=\"connect flex-column\">\n\t\t<Carousel v-model=\"currentConnectorIndex\" :options=\"{ position: 'start', overscroll: true }\" class=\"connectors\">\n\t\t\t<div v-for=\"connector in connectors\" :key=\"connector.session\" class=\"connection-card-container  fade-list-item\">\n\t\t\t\t<ConnectionCard :state=\"connector\" class=\"box\" />\n\t\t\t</div>\n\t\t</Carousel>\n\t\t<div class=\"bottom-info secondary-text\" style=\"opacity: 0.0; pointer-events: none;\">\n\t\t\t<div>All Channels {{ Object.keys(states).length }}</div>\n\t\t\t<div v-for=\"(extState, name) in states\" :key=\"name\">{{ extState }}</div>\n\t\t</div>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Carousel from '@/components/layout/Carousel.vue'\nimport ConnectionCard from '@/components/composed/ConnectionCard.vue'\nimport AddressIcon from '@/components/atomic/AddressIcon.vue'\nimport Address from '@/components/atomic/Address.vue'\nimport Button from '@/components/atomic/Button.vue'\nimport ArweaveStore from '@/store/ArweaveStore'\nimport InterfaceStore from '@/store/InterfaceStore'\nimport { state, states } from '@/functions/Channels'\nimport { connectors } from '@/functions/Connect'\nimport { computed, onBeforeUnmount, ref } from 'vue'\n\nconst currentConnectorIndex = ref(connectors.value.findIndex(value =>\n\tvalue.origin === state.origin && value.session === state.session))\n\n\t\t// const test = ref(false)\n\t\t// const testing = () => {\n\t\t// \ttest.value = !test.value\n\t\t// \tsetTimeout(testing, 4000)\n\t\t// }\n\t\t// testing()\n\t\t// const connectorsComp = computed(() => test.value ? [connectors.value[0], connectors.value[2]] : connectors.value)\n\t\t// InterfaceStore.toolbar.links = false\n\t\t// onBeforeUnmount(() => InterfaceStore.toolbar.links = true)\n</script>\n\n\n\n<style scoped>\n.connect {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n.connectors {\n\twidth: 100%;\n\tmin-height: var(--current-vh);\n}\n\n.connection-card-container {\n\theight: var(--current-vh);\n\twidth: var(--current-vw);\n\tmax-width: var(--column-width-small);\n\tpadding: 0;\n\tdisplay: inline-block;\n}\n\n.connection-card {\n\tpadding: var(--spacing);\n\tpadding-bottom: 0;\n\theight: 100%;\n}\n\n.wallet {\n\tflex: 1 1 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-evenly;\n}\n\n.address-icon {\n\twidth: 128px;\n\theight: 128px;\n\tborder-radius: var(--border-radius);\n}\n\n.bottom-info {\n\tposition: absolute;\n\tbottom: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-end;\n}\n\n.fade-list-leave-active {\n\tposition: absolute !important;\n\t/* scroll-snap-align: none; */\n}\n\n.fade-list-enter-active {\n\t/* scroll-snap-align: none; */\n}\n\n.fade-list-move {\n\t/* scroll-snap-align: none; */\n}\n</style>"],"names":["_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_openBlock","_createElementBlock","render"],"mappings":"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"}