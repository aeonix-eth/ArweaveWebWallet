{"version":3,"file":"Connect.d787931d.js","sources":["../../src/components/composed/WalletSelector.vue","../../src/components/composed/WalletTabs.vue","../../src/components/composed/TxCardExtension.vue","../../src/components/composed/PermissionCard.vue","../../src/components/composed/PermissionSettings.vue","../../src/components/composed/ConnectionCard.vue","../../src/views/Connect.vue"],"sourcesContent":["<template>\n\t<div class=\"wallet-selector\">\n\t\t<TransitionsManager>\n\t\t\t<button v-if=\"model\" type=\"button\" @click=\"$emit('selectWallet')\" class=\"tab\" :class=\"{ active }\">\n\t\t\t\t<AddressIcon :address=\"address\" />\n\t\t\t</button>\n\t\t</TransitionsManager>\n\t\t<button v-if=\"exit\" class=\"exit\" type=\"button\" @click=\"$emit('exit')\">\n\t\t\t<div class=\"exit-background\" />\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t<path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n\t\t\t\t<path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\n\t\t\t</svg>\n\t\t</button>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport AddressIcon from '@/components/atomic/AddressIcon.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport { computed } from 'vue'\nimport { getWalletById } from '@/functions/Wallets'\n\nconst props = defineProps({ modelValue: String, exit: Boolean, active: Boolean })\nconst emit = defineEmits(['update:modelValue', 'selectWallet', 'exit'])\n\nconst model = computed<string | undefined>({\n\tget () { return props.modelValue },\n\tset (value) { emit('update:modelValue', value) }\n})\n\nconst address = computed(() => getWalletById(model.value)?.key)\n</script>\n\n\n\n<style scoped>\n.wallet-selector {\n\t--spacing: var(--toolbar-spacing);\n\tdisplay: flex;\n}\n\n.wallet-selector > * + * {\n\tmargin-inline-start: var(--spacing);\n}\n\n.tab {\n\topacity: 0.5;\n\ttransition: 0.2s ease;\n}\n\n.tab.active {\n\topacity: 1;\n}\n\n.address-icon {\n\twidth: 40px;\n\theight: 40px;\n\tpadding: 8px;\n\tbackground: var(--background);\n\tborder-radius: var(--border-radius);\n}\n\n.exit {\n\twidth: 40px;\n\theight: 40px;\n\tcolor: var(--red);\n\tposition: relative;\n\tflex: 0 0 auto;\n}\n\n.exit-background {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tborder-radius: var(--border-radius);\n\tbackground: var(--red);\n\topacity: 0.1;\n}\n\n.exit svg {\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 20%;\n}\n</style>","<template>\n\t<div class=\"wallet-tabs\">\n\t\t<Carousel v-model=\"carouselIndex\" :options=\"{ align: 'center', overscroll: true, immediate: true }\">\n\t\t\t<button v-for=\"Wallet in Wallets\" :key=\"Wallet.id\" type=\"button\" @click=\"model = Wallet.id\" class=\"tab\" :class=\"{ active: Wallet.id == model }\">\n\t\t\t\t<AddressIcon :address=\"Wallet.key\" />\n\t\t\t</button>\n\t\t</Carousel>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Carousel from '@/components/layout/Carousel.vue'\nimport AddressIcon from '@/components/atomic/AddressIcon.vue'\nimport { computed } from 'vue'\nimport { Wallets } from '@/functions/Wallets'\n\nconst props = defineProps(['modelValue'])\nconst emit = defineEmits(['update:modelValue'])\n\nconst model = computed({\n\tget () { return props.modelValue },\n\tset (value) { emit('update:modelValue', value) }\n})\n\nconst carouselIndex = computed(() => Wallets.value.findIndex(w => w.id === model.value))\n</script>\n\n\n\n<style scoped>\n.wallet-tabs {\n\tdisplay: flex;\n}\n\n.tab {\n\topacity: 0.2;\n\ttransition: 0.2s ease;\n}\n\n.tab.active,\n.tab:hover {\n\topacity: 1;\n}\n\n.address-icon {\n\twidth: 40px;\n\theight: 40px;\n\tpadding: 8px;\n\tbackground: var(--background);\n\tborder-radius: var(--border-radius);\n}\n\n.carousel {\n\tflex: 1 1 0;\n}\n</style>","<template>\n\t<div class=\"tx-card-extension\">\n\t\t<div v-if=\"tx.tags.length || tx.data_size\" class=\"flex-row\" style=\"justify-content:space-between;\">\n\t\t\t<div v-if=\"tx.tags.length\">Tags:</div>\n\t\t\t<div v-if=\"tx.data_size\">Data: {{ humanFileSize(tx.data_size) }}</div>\n\t\t</div>\n\t\t<ul v-if=\"tx.tags.length\" class=\"tags secondary-text no-scrollbar\">\n\t\t\t<li v-for=\"tag in tx.tags\">\n\t\t\t\t{{ tag.name + ' | ' + tag.value }}\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</template>\n\n\n\n<script setup>\nimport Address from '@/components/atomic/Address.vue'\nimport ArweaveStore, { arweave } from '@/store/ArweaveStore'\nimport InterfaceStore from '@/store/InterfaceStore'\nimport { unpackTags } from '@/functions/Transactions'\nimport { humanFileSize } from '@/functions/Utils'\nimport { computed } from 'vue'\n\nconst props = defineProps(['tx'])\n\n// owner - verify\n// tags\n// data_size\n// data\n// reward\n\nconst verticalElement = computed(() => InterfaceStore.breakpoints.verticalLayout)\n</script>\n\n\n\n<style scoped>\n.tags {\n\twhite-space: normal;\n\toverflow-x: auto;\n}\n\nul {\n\tpadding-inline-start: 1em;\n\tmargin-block-start: 0;\n}\n\nli {\n\twhite-space: nowrap;\n}\n</style>","<template>\n\t<div v-show=\"message\" class=\"permission-card\">\n\t\t<template v-if=\"message?.method === 'signTransaction'\">\n\t\t\t<span>Sign transaction</span>\n\t\t\t<TxCard :tx=\"tx\" />\n\t\t\t<TxCardExtension :tx=\"tx\" />\n\t\t</template>\n\t\t<template v-if=\"message?.method === 'dispatch'\">\n\t\t\t<span>Sign transaction and upload</span>\n\t\t\t<TxCard :tx=\"tx\" />\n\t\t\t<TxCardExtension :tx=\"tx\" />\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'getPublicKey'\" class=\"permission-card\">\n\t\t\tShare the public key\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'getArweaveConfig'\" class=\"permission-card\">\n\t\t\tShare the arweave config\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'sign'\" class=\"permission-card\">\n\t\t\tSign data\n\t\t</template>\n\t\t<template v-else-if=\"message?.method === 'decrypt'\" class=\"permission-card\">\n\t\t\tDecrypt data\n\t\t</template>\n\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t<ActionList v-if=\"!messageEntry.status\" :actions=\"actions\" />\n\t\t\t<ActionList v-else :actions=\"actionsPending\" />\n\t\t</transition>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport TxCard from '@/components/composed/TxCard.vue'\nimport TxCardExtension from '@/components/composed/TxCardExtension.vue'\nimport ActionList from '@/components/composed/ActionsList.vue'\nimport { getMessage } from '@/functions/JsonRpc'\nimport { ArweaveVerifier } from 'arweave-wallet-connector/lib/ArweaveWebWallet'\nimport { computed, ref, watch } from 'vue'\n\nimport IconY from '@/assets/icons/y.svg?component'\nimport IconX from '@/assets/icons/x.svg?component'\nimport IconConnection from '@/assets/icons/connection.svg?component'\n\nconst props = defineProps<{ messageEntry: MessageEntry }>()\n\nconst message = ref(null as null | StoredMessage)\n\nconst tx = computed(() => {\n\tif (message.value?.method !== 'signTransaction' && message.value?.method !== 'dispatch') { return }\n\tconst receivedTx = message.value?.params?.[0] as Parameters<ArweaveVerifier['signTransaction']>[0]\n\tconst tags = receivedTx.tags?.map(({name, value}) => ({ name: window.atob(name), value: window.atob(value) }))\n\treturn { ...receivedTx, tags }\n})\n\nwatch(() => props.messageEntry, async () => {\n\tmessage.value = await getMessage(props.messageEntry)\n}, { immediate: true })\n\nconst actions = [\n\t{ name: 'Accept', icon: IconY, run: () => props.messageEntry.status = 'accepted' },\n\t{ name: 'Reject', icon: IconX, run: () => props.messageEntry.status = 'rejected' },\n]\nconst actionsPending = [{ name: 'Pending', icon: IconConnection, run: () => {} }]\n</script>\n\n\n\n<style scoped>\n.actions-list {\n\tjustify-content: space-around;\n}\n</style>","<template>\n\t<div class=\"flex-column no-scrollbar\">\n\t\t<button v-for=\"method in methods\" :key=\"method.name\" :disabled=\"method.disabled\" class=\"row method\" @click=\"setMethod(method.name)\">\n\t\t\t<div>{{ method.displayName }}</div>\n\t\t\t<TransitionsManager :vector=\"walletSettings[method.name] ? 1 : -1\" axis=\"y\">\n\t\t\t\t<div :key=\"walletSettings[method.name]\">{{ walletSettings[method.name] ? 'Allow' : 'Ask' }}</div>\n\t\t\t</TransitionsManager>\n\t\t</button>\n\t\t<TransitionsManager>\n\t\t\t<Button v-if=\"changed\" @click=\"applySettings()\">\n\t\t\t\tApply\n\t\t\t</Button>\n\t\t</TransitionsManager>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Button from '@/components/atomic/Button.vue'\nimport { getWalletById } from '@/functions/Wallets'\nimport { computed, ref, watch } from 'vue'\nimport IconConnection from '@/assets/icons/connection.svg?component'\nimport { useChannel } from '@/functions/Channels'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\n\nconst props = defineProps<{ state: ConnectorState, walletId?: string }>()\n\nconst displayKeys = {\n\tconnect: 'Connect automatically',\n\tsignTransaction: 'Sign transaction',\n\tgetPublicKey: 'Share public key',\n\tsign: 'Sign arbitrary data',\n\tdecrypt: 'Decrypt data',\n\tgetArweaveConfig: 'Share arweave gateway configuration',\n} as { [key: string]: string | undefined }\n\nconst getInstanceProperties = (wallet?: Provider) => Object.getOwnPropertyNames(Object.getPrototypeOf(wallet?.messageRunner || {}))\n\t.filter(prop => {\n\t\tif (prop === 'constructor' || prop === 'getMethodMetadata' || !wallet) { return }\n\t\treturn !wallet.messageRunner.getMethodMetadata(prop)?.unavailable\n\t})\n\t.map(prop => ({\n\t\tname: prop,\n\t\tdisplayName: displayKeys[prop] || prop,\n\t\tdisabled: wallet?.messageRunner.getMethodMetadata(prop)?.userIntent\n\t}))\nconst wallet = computed(() => getWalletById(props.walletId))\nconst methods = computed(() => [...getInstanceProperties(wallet.value)]) // 'connect' in here?\nconst setMethod = (method: string) => walletSettings.value && (walletSettings.value[method] = !walletSettings.value[method])\nconst channel = useChannel('connectionSettings:', props.state.origin, {})\nconst walletSettings = ref(undefined as undefined | { [method: string]: any })\nconst initialWalletSettings = ref(undefined as undefined | { [method: string]: any })\nwatch(wallet, w => {\n\tif (!w?.uuid) { return }\n\tchannel.state.value ||= {}\n\tinitialWalletSettings.value = channel.state.value[w.uuid] ||= {}\n\twalletSettings.value = { ...initialWalletSettings.value }\n}, { immediate: true })\nconst isChanged = ([method, value]: [string, any]) => {\n\tconst initial = initialWalletSettings.value?.[method] || false\n\tif (value !== initial) { return true }\n}\nconst changed = computed(() => {\n\tif (!walletSettings.value) { return false }\n\treturn Object.entries(walletSettings.value).find(isChanged)\n})\nconst applySettings = () => {\n\tif (!walletSettings.value || !initialWalletSettings.value) { return false }\n\tObject.entries(walletSettings.value).filter(isChanged)\n\t\t.forEach(([method, value]) => initialWalletSettings.value && (initialWalletSettings.value[method] = value))\n}\n</script>\n\n\n\n<style scoped>\n.row {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\nbutton:disabled {\n\topacity: var(--element-disabled-opacity)\n}\n</style>","<template>\n\t<ListContainer class=\"connection-card flex-column no-scrollbar\">\n\t\t<template #header>\n\t\t\t<div class=\"flex-row\">\n\t\t\t\t<button type=\"button\" class=\"info flex-row\" @click=\"navigateBack\" :disabled=\"!navigateBackAvailable(state.origin, state.session)\">\n\t\t\t\t\t<IconBackground :img=\"state.appInfo?.logo\" :icon=\"IconConnection\" />\n\t\t\t\t\t<div style=\"min-width: 0;\">\n\t\t\t\t\t\t<div class=\"ellipsis\">{{ state.appInfo?.name || 'Connector' }}</div>\n\t\t\t\t\t\t<div class=\"secondary-text ellipsis\">{{ state.origin }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Icon v-if=\"navigateBackAvailable(state.origin, state.session)\" :icon=\"IconLaunch\" />\n\t\t\t\t</button>\n\t\t\t\t<WalletSelector v-model=\"state.walletId\" :exit=\"true\" :active=\"!selectActive\" @selectWallet=\"selectWallet\" @exit=\"disconnect\" />\n\t\t\t</div>\n\t\t\t<Tabs :tabs=\"tabs\" v-model=\"currentTab\" :disabled=\"!currentId\" />\n\t\t</template>\n\t\t<template #default>\n\t\t\t<TransitionsManager :vector=\"transitionName\" axis=\"x\">\n\t\t\t\t<OverlayPrompt v-if=\"!Wallets.length\" :options=\"{ action: { icon: IconAddBox, name: 'Add wallet', run: () => router.push('/add') } }\" />\n\t\t\t\t<div v-else class=\"container-scroll\" :key=\"contentKey\">\n\t\t\t\t\t<transition-group name=\"fade-list\">\n\t\t\t\t\t\t<WalletTabs v-if=\"selectActive\" v-model=\"currentId\" class=\"fade-list-item\" key=\"-1\" />\n\t\t\t\t\t\t<div class=\"page-container\" key=\"0\">\n\t\t\t\t\t\t\t<TransitionsManager :vector=\"transitionName\" axis=\"x\">\n\t\t\t\t\t\t\t\t<div :key=\"(currentId || '') + currentTab\" class=\"content\">\n\t\t\t\t\t\t\t\t\t<div v-if=\"currentTab === 'Requests'\">\n\t\t\t\t\t\t\t\t\t\t<transition-group name=\"fade-list\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"fade-list-item\" key=\"0\" :style=\"{ padding: 0, border: 0, outline: '0.5px solid var(--border)' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<div v-if=\"connectionFeed?.length === 0 && state.walletId && state.walletId === currentId\" class=\"status fade-list-item\" key=\"1\">Connected</div>\n\t\t\t\t\t\t\t\t\t\t\t<OverlayPrompt v-if=\"currentId !== state.walletId\" :options=\"connectOptions\" class=\"fade-list-item\" key=\"2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ProfilePreview v-if=\"currentWallet\" :wallet=\"currentWallet\" />\n\t\t\t\t\t\t\t\t\t\t\t</OverlayPrompt>\n<!--\t\t\t\t\t\t\t\t\t\t\t\tstay logged in here -->\n\t\t\t\t\t\t\t\t\t\t\t<PermissionCard v-for=\"messageEntry in connectionFeed\" :key=\"messageEntry.uuid\" :messageEntry=\"messageEntry\" style=\"padding: var(--spacing);\" class=\"flex-column fade-list-item\" />\n\t\t\t\t\t\t\t\t\t\t</transition-group>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div v-else-if=\"currentTab === 'Permissions'\">\n\t\t\t\t\t\t\t\t\t\t<transition-group name=\"fade-list\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"fade-list-item\" key=\"0\" :style=\"{ padding: 0, border: 0, outline: '0.5px solid var(--border)' }\"/>\n\t\t\t\t\t\t\t\t\t\t\t<PermissionSettings :state=\"state\" :walletId=\"currentId\" class=\"fade-list-item\" key=\"2\" />\n\t\t\t\t\t\t\t\t\t\t</transition-group>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</TransitionsManager>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</transition-group>\n\t\t\t\t</div>\n\t\t\t</TransitionsManager>\n\t\t</template>\n\t</ListContainer>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport ListContainer from '@/components/layout/ListContainer.vue'\nimport WalletSelector from '@/components/composed/WalletSelector.vue'\nimport WalletTabs from '@/components/composed/WalletTabs.vue'\nimport Tabs from '@/components/atomic/Tabs.vue'\nimport IconBackground from '@/components/atomic/IconBackground.vue'\nimport Icon from '@/components/atomic/Icon.vue'\nimport Notification from '@/components/composed/Notification.vue'\nimport PermissionCard from '@/components/composed/PermissionCard.vue'\nimport PermissionSettings from '@/components/composed/PermissionSettings.vue'\nimport TransitionsManager from '@/components/visual/TransitionsManager.vue'\nimport ProfilePreview from '@/components/composed/ProfilePreview.vue'\nimport { getWalletById, Wallets } from '@/functions/Wallets'\nimport InterfaceStore from '@/store/InterfaceStore'\nimport { navigateBack, navigateBackAvailable } from '@/functions/Connect'\nimport { computed, ref, toRef, watch } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport IconConnection from '@/assets/icons/connection.svg?component'\nimport IconY from '@/assets/icons/y.svg?component'\nimport IconX from '@/assets/icons/x.svg?component'\nimport IconLaunch from '@/assets/icons/launch.svg?component'\nimport IconAddBox from '@/assets/icons/add_box.svg?component'\nimport OverlayPrompt from '@/components/layout/OverlayPrompt.vue'\n\nconst props = defineProps<{ state: ConnectorState }>()\nconst router = useRouter()\n\nconst defaultId = Wallets.value[0]?.id\nconst addresses = computed(() => Wallets.value.map(wallet => wallet.key))\nconst currentId = ref(props.state.walletId || defaultId)\nconst currentWallet = computed(() => getWalletById(currentId.value))\nconst defaultWallet = computed(() => getWalletById(defaultId))\nconst tabs = [\n\t{ name: 'Requests', color: 'var(--orange)' },\n\t{ name: 'Permissions', color: 'var(--green)' },\n]\nconst currentTab = ref(currentId.value ? tabs[0].name : null)\nwatch(() => props.state.walletId, (walletId) => {\n\tif (!walletId) { return }\n\tselectEnabled.value = false\n\tcurrentId.value = walletId\n\tcurrentTab.value = tabs[0].name\n})\n\nconst disconnect = () => props.state.walletId = false\nconst connect = () => {\n\tselectEnabled.value = false\n\tprops.state.walletId = currentId.value + ''\n}\nconst goBack = () => {\n\tif (!props.state.walletId) { return }\n\tif (currentId.value !== (props.state.walletId || Wallets.value[0]?.id)) { contentKey.value++ }\n\tselectEnabled.value = false\n\tcurrentId.value = props.state.walletId\n}\n\nconst selectEnabled = ref(!props.state.walletId)\nconst selectActive = computed(() => selectEnabled.value && Wallets.value.length > 1)\nconst contentKey = ref(0)\nconst selectWallet = () => {\n\tif (!selectEnabled.value) { selectEnabled.value = true; return }\n\tif (currentId.value !== (props.state.walletId || Wallets.value[0]?.id)) { contentKey.value++ }\n\tcurrentId.value = props.state.walletId || Wallets.value[0]?.id\n\tselectEnabled.value = false\n}\n\nconst connectOptions = computed(() => ({\n\tactions: [{ name: props.state.walletId ? 'Switch' : 'Connect', icon: IconY, run: connect }],\n\tinline: true,\n}))\n\n\n\nconst connectionFeed = computed(() => {\n\tif (currentId.value !== props.state.walletId) { return [] }\n\treturn props.state.messageQueue?.filter((m) => !m.fulfilled)\n})\n\n\n\nconst verticalLayout = toRef(InterfaceStore.breakpoints, 'verticalLayout')\nconst transitionName = ref(null as null | number)\nconst selectTransitionName = (val: number, oldVal: number) => transitionName.value = val - oldVal\nwatch(() => tabs.findIndex(tab => tab.name === currentTab.value), selectTransitionName)\nwatch(() => Wallets.value.findIndex(wallet => wallet.id === currentId.value), selectTransitionName)\n</script>\n\n\n\n<style scoped>\n.connection-card {\n\toverflow-y: auto;\n}\n\n.flex-row {\n\talign-items: center;\n}\n\n.info {\n\tflex: 1 1 0;\n\tmin-width: 0;\n\toverflow: hidden;\n}\n\n.wallet-selector {\n\tflex: 0 0 auto;\n\tjustify-content: flex-end;\n}\n\n.fade-list-item {\n\tpadding: var(--spacing);\n\tborder-bottom: 0.5px solid var(--border);\n\tposition: relative;\n\tbackground: var(--background);\n}\n\n.wallet-tabs {\n\tpadding: var(--spacing) 0;\n\tjustify-content: center;\n\twidth: 100%;\n\tz-index: 0;\n\tborder-bottom: 0;\n}\n\n.container-scroll {\n\toverflow: hidden auto;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.page-container {\n\theight: 100%;\n\tposition: relative;\n}\n\n.content {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n}\n\n.status {\n\theight: 8em;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: #444;\n}\n\n.content > * > * {\n\tbackground: var(--background);\n\twidth: 100%;\n}\n\n.notification {\n\t/*width: 100%;*/\n\t/*padding: var(--spacing);*/\n\t/*border-bottom: 0.5px solid var(--border);*/\n}\n\n.icon-background {\n\tflex: 0 0 auto;\n}\n\n.icon {\n\topacity: var(--element-secondary-opacity);\n}\n</style>","<template>\n\t<div class=\"connect flex-column\">\n\t\t<Carousel v-model=\"currentConnectorIndex\" :options=\"{ align: 'start', overscroll: true }\" class=\"connectors\">\n\t\t\t<div v-for=\"connector in connectors\" :key=\"connector.session\" class=\"connection-card-container  fade-list-item\">\n\t\t\t\t<ConnectionCard :state=\"connector\" class=\"box\" />\n\t\t\t</div>\n\t\t</Carousel>\n\t\t<div class=\"bottom-info secondary-text\" style=\"opacity: 0.0; pointer-events: none;\">\n\t\t\t<div>All Channels {{ Object.keys(states).length }}</div>\n\t\t\t<div v-for=\"(extState, name) in states\" :key=\"name\">{{ extState }}</div>\n\t\t</div>\n\t</div>\n</template>\n\n\n\n<script setup lang=\"ts\">\nimport Carousel from '@/components/layout/Carousel.vue'\nimport ConnectionCard from '@/components/composed/ConnectionCard.vue'\nimport { state, states } from '@/functions/Channels'\nimport { connectors } from '@/functions/Connect'\nimport { ref } from 'vue'\n\nconst currentConnectorIndex = ref(connectors.value.findIndex(value => value.origin === state.origin && value.session === state.session))\n</script>\n\n\n\n<style scoped>\n.connect {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n.connectors {\n\twidth: 100%;\n\tmin-height: var(--current-vh);\n}\n\n.connection-card-container {\n\theight: var(--current-vh);\n\twidth: var(--current-vw);\n\tmax-width: var(--column-width-small);\n\tpadding: 0;\n\tdisplay: inline-block;\n}\n\n.connection-card {\n\theight: 100%;\n}\n\n.wallet {\n\tflex: 1 1 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-evenly;\n}\n\n.address-icon {\n\twidth: 128px;\n\theight: 128px;\n\tborder-radius: var(--border-radius);\n}\n\n.bottom-info {\n\tposition: absolute;\n\tbottom: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-end;\n}\n\n.fade-list-leave-active {\n\tposition: absolute !important;\n\t/* scroll-snap-align: none; */\n}\n</style>"],"names":[],"mappings":"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"}